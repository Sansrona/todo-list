{"version":3,"sources":["assets/icons/remove.svg","components/Badge/Badge.jsx","components/List/List.jsx","assets/icons/close.svg","components/AddListButton/AddListButton.jsx","assets/icons/edit.svg","assets/icons/add-task.svg","components/Tasks/AddTaskForm.jsx","components/Tasks/Tasks.jsx","App.js","index.js"],"names":["Badge","color","onClick","className","classNames","List","items","isRemovable","onRemove","onClickItem","activeItem","map","item","i","active","id","icon","name","tasks","length","src","removeSvg","alt","window","confirm","axios","delete","then","removeList","AddButtonList","colors","onAdd","useState","visiblePopup","setVisiblePopup","selectedColor","selectColor","inputValue","setInputValue","isLoading","setIsLoading","useEffect","Array","isArray","onClose","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","closeSVG","value","onChange","e","target","type","placeholder","post","colorId","data","filter","c","listObj","catch","alert","finally","AddTaskForm","list","addNewTask","isFormVisible","setFormVisible","isPending","setIsPending","disabled","setDisabled","toggleFormVisible","obj","listId","text","completed","addIcon","Tasks","onEditTitle","onConfirmed","withoutEmpty","onRemoveTask","onEditTask","console","log","style","hex","editSvg","newTitle","prompt","patch","task","checked","htmlFor","currentTarget","App","lists","setLists","setColors","setActiveItem","history","useHistory","useLocation","get","taskObj","newTask","onEditListTitle","title","newList","location","pathname","split","find","Number","taskId","taskStatus","push","newLists","exact","path","taskText","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.01eee985.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/remove.94385117.svg\";","import React from 'react';\r\nimport classNames from 'classnames'\r\n\r\nimport './Badge.scss';\r\n\r\nconst Badge = ({color, onClick, className}) => <i onClick={onClick} className={classNames('badge',{[`badge--${color}`]:color}   ,className)}></i>;\r\n\r\nexport default Badge;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport axios from 'axios';\r\n\r\nimport removeSvg from '../../assets/icons/remove.svg';\r\n\r\nimport Badge from '../Badge/Badge';\r\n\r\nimport './List.scss';\r\n\r\n\r\nfunction List({ items, isRemovable, onClick, onRemove, onClickItem,activeItem }) {\r\n\r\n    const removeList = item => {\r\n        if (window.confirm(\"You really want to delete?\")) {\r\n            axios.delete('https://my-json-server.typicode.com/Sansrona/todo-list/lists/' + item.id).then(() => {\r\n                onRemove(item.id);\r\n            });\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <ul className=\"list\" onClick={onClick}>\r\n            {items.map((item, i) => (\r\n                <li key={item.name} onClick={onClickItem ? ()=>{onClickItem(item)} : null} className={classNames(item.className, { active: item.active ? item.active : activeItem && activeItem.id === item.id})}>\r\n                    <i>{item.icon ? (item.icon) : (<Badge color={item.color.name} />)}</i>\r\n                    <span>{item.name}{item.tasks && `(${item.tasks.length})`}</span>\r\n                    {isRemovable && <img className=\"list__remove-icon\" src={removeSvg} alt=\"Remove icon\" onClick={() => removeList(item)}></img>}\r\n                </li>\r\n            ))}\r\n\r\n        </ul>   \r\n    );\r\n}\r\n\r\nexport default List;","export default __webpack_public_path__ + \"static/media/close.a730c5a1.svg\";","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport List from '../List/List';\r\nimport Badge from '../Badge/Badge';\r\n\r\nimport './AddListButtons.scss'\r\nimport closeSVG from '../../assets/icons/close.svg';\r\n\r\nconst AddButtonList = ({colors, onAdd}) => {\r\n\r\n    const [visiblePopup, setVisiblePopup] = useState(false);\r\n    const [selectedColor, selectColor] = useState(3);\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false); \r\n\r\n  useEffect(()=>{\r\n    if(Array.isArray(colors)){\r\n      selectColor(colors[0].id);\r\n    }\r\n  },[colors]);\r\n\r\n  const onClose = () =>{\r\n    setVisiblePopup(false);\r\n    setInputValue('');\r\n    selectColor(colors[0].id);\r\n  }\r\n\r\n    const addList = () => {\r\n      if(!inputValue){\r\n        alert(\"Enter folder name\");\r\n        return;\r\n      }\r\n      setIsLoading(true);\r\n      axios.post('https://my-json-server.typicode.com/Sansrona/todo-list/lists', {\r\n        name:inputValue,colorId:selectedColor}).then(({data})=>{\r\n          const color  = colors.filter(c => c.id === selectedColor)[0].name;\r\n          const listObj = {...data, color:{name: color}};\r\n          onAdd(listObj);\r\n          onClose();\r\n        }).catch(()=>{alert(\"Error during adding new folder\")}).finally(()=>{\r\n          setIsLoading(false);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className='add-list'>\r\n            <List onClick = {() => setVisiblePopup(!visiblePopup)} \r\n            items={[\r\n            {\r\n              className:\"list__add-button\",\r\n              icon:<svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n                    <path d=\"M6 1V11\" stroke=\"purple\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                    <path d=\"M1 6H11\" stroke=\"purple\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                    </svg>,\r\n              name:'New folder'\r\n            }\r\n          ]}/>\r\n            {visiblePopup && (\r\n              <div className=\"add-list__popup\">\r\n              <img src={closeSVG} alt=\"close icon\" className=\"add-list__popup-close-btn\" onClick={onClose}>\r\n              </img>\r\n                <input value={inputValue} onChange={ e=> setInputValue(e.target.value)} type=\"text\" placeholder='Folder name' className=\"field\"></input>\r\n                <div className=\"add-list__popup-colors\">\r\n                {\r\n                  colors.map(color=><Badge onClick={()=>selectColor(color.id) } key={color.id} color={color.name} className={selectedColor === color.id && 'active'}/>)\r\n                } \r\n                </div>\r\n                <button onClick={addList} className=\"button\">\r\n                {isLoading ? 'Adding...' : 'Add folder'}\r\n                </button>\r\n            </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddButtonList;","export default __webpack_public_path__ + \"static/media/edit.a9645c72.svg\";","export default __webpack_public_path__ + \"static/media/add-task.bb82cf25.svg\";","import React, { useState } from 'react'\r\nimport axios from 'axios';\r\n\r\nimport addIcon from '../../assets/icons/add-task.svg';\r\nimport './Tasks.scss'\r\n\r\nexport default function AddTaskForm({ list, addNewTask }) {\r\n\r\n    const [isFormVisible, setFormVisible] = useState(false);\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [isPending, setIsPending] = useState(false);\r\n    const [disabled, setDisabled] = useState(false);\r\n\r\n    const toggleFormVisible = () => {\r\n        setFormVisible(!isFormVisible);\r\n        setInputValue('');\r\n    }\r\n    const addTaskInput = () => {\r\n        if(!inputValue){\r\n        alert(\"Enter task name\");\r\n        return;\r\n      }\r\n        const obj = { listId: list.id, text: inputValue, completed: false }\r\n        setIsPending(true);\r\n        setDisabled(true);\r\n        axios.post('https://my-json-server.typicode.com/Sansrona/todo-list/tasks', obj).then(({data}) =>{\r\n            addNewTask(list.id,data)\r\n            toggleFormVisible();\r\n        }).catch(() =>{alert('error during adding new task')}).finally(() =>{\r\n            setDisabled(false);\r\n            setIsPending(false);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='tasks__form'>\r\n            {isFormVisible\r\n                ? <div className=\"tasks__form-adder\">\r\n                    <input value={inputValue} onChange={e => setInputValue(e.target.value)} type=\"text\" placeholder='Task' className=\"field\"></input>\r\n                    <button disabled={disabled} onClick={addTaskInput} className=\"button\">{isPending ? 'Adding...' : 'Add task'} </button>\r\n                    <button onClick={toggleFormVisible} className=\"button button--grey\">Cancel</button>\r\n                </div>\r\n                : <div onClick={toggleFormVisible} className=\"tasks__form-new\">\r\n                    <img src={addIcon} alt=\"Add Icon\" />\r\n                    <span>New Task</span>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios'\r\n\r\nimport editSvg from '../../assets/icons/edit.svg';\r\nimport removeSvg from '../../assets/icons/remove.svg';\r\n\r\nimport './Tasks.scss';\r\nimport AddTaskForm from './AddTaskForm'\r\n\r\nconst Tasks = ({list,onEditTitle,addNewTask, onConfirmed,withoutEmpty,onRemoveTask,onEditTask}) => {    \r\n    const editTitle =()=>{\r\n        const newTitle = window.prompt('List name:', list.name);\r\n         if(newTitle){\r\n             onEditTitle(list.id, newTitle);\r\n             axios.patch('https://my-json-server.typicode.com/Sansrona/todo-list/lists/' + list.id,{\r\n                 name:newTitle\r\n             }).catch(()=>{\r\n                 alert('Can not update list name');\r\n             });\r\n         }\r\n    };\r\n    console.log(list.tasks[0])\r\n    return (\r\n        <div className=\"tasks\">\r\n            <h2 style={{color: `#${list.color.hex}`}} className=\"tasks__title\">{list.name} <img src={editSvg} alt='edit svg' onClick={editTitle}></img> </h2>\r\n            <div className=\"tasks__items\">\r\n            {!withoutEmpty && list.tasks.length <= 0 && <h2>No tasks</h2>}\r\n            {\r\n                list.tasks.map(task=><div key={task.id} className=\"tasks__items-row\">\r\n                    <div className=\"checkbox\">\r\n                        <input onChange={(e)=> onConfirmed(list.id, task.id, e.target.checked)} id={`task-${task.id}`} type=\"checkbox\" checked={task.completed} />\r\n                        <label htmlFor={`task-${task.id}`}>\r\n                        <svg width=\"11\" height=\"8\" viewBox=\"0 0 11 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path d=\"M9.29999 1.20001L3.79999 6.70001L1.29999 4.20001\" stroke=\"#fff\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                        </svg>\r\n                        </label>\r\n                    </div>\r\n                    <input onChange={e=>onEditTask(list.id, task.id, e.currentTarget.value)} value={task.text} />\r\n                    <img src={removeSvg} onClick={()=> onRemoveTask(list.id, task.id)} className='tasks__remove-icon' alt=\"Remove icon\"/>\r\n                </div>)\r\n            }\r\n            </div>\r\n            <AddTaskForm list={list} addNewTask={addNewTask}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tasks;\r\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport { Route, useHistory, useLocation } from 'react-router-dom'\n\nimport { AddButtonList, List, Tasks } from './components/Components';\n\n\nfunction App() {\n\n  const [lists, setLists] = useState(null);\n  const [colors, setColors] = useState(null);\n  const [activeItem, setActiveItem] = useState(null);\n  let history = useHistory();\n  let location = useLocation();\n  useEffect(() => {\n    axios\n      .get('https://my-json-server.typicode.com/Sansrona/todo-list/lists?_expand=color&_embed=tasks')\n      .then(({ data }) => {\n        setLists(data);\n      });\n    axios.get('https://my-json-server.typicode.com/Sansrona/todo-list/colors').then(({ data }) => {\n      setColors(data);\n    });\n  }, []);\n\n  const onAddList = (obj) => {\n    const newList = [...lists, obj];\n    setLists(newList);\n  };\n\n  const addNewTask = (listId, taskObj) => {\n    const newTask = lists.map(list => {\n      if (list.id === listId) {\n        list.tasks = [...list.tasks, taskObj]\n      }\n      return list;\n    })\n\n    setLists(newTask);\n  }\n\n  const onEditListTitle = (id, title) => {\n    const newList = lists.map(list => {\n      if (list.id === id) {\n        list.name = title;\n      }\n      return list;\n    });\n    setLists(newList);\n  }\n  // console.log(location);\n  useEffect(() => {\n    const listId = history.location.pathname.split('lists/')[1];\n    if (lists) {\n      const list = lists.find(list => list.id === Number(listId));\n      setActiveItem(list);\n    }\n  }, [history.location.pathname]);\n\n\n  const onRemoveTask = (listId, taskId) => {\n    const newList = lists.map(list => {\n      if (list.id === listId) {\n        list.tasks = list.tasks.filter(task => task.id !== taskId)\n      }\n      return list;\n    })\n    setLists(newList);\n    axios.delete(`https://my-json-server.typicode.com/Sansrona/todo-list/tasks/${taskId}`).catch(()=>{\n                 alert('Can not delete task');\n             });\n  }\n\n  const onEditTask = (listId, taskId, taskText) => {\n    const newList = lists.map(list=>{\n      if(list.id === listId){\n        list.tasks.map(task=> {\n          if(task.id === taskId){\n            task.text = taskText\n          }\n          return task;\n        })\n      }\n      return list;\n    })\n    setLists(newList);\n    axios.patch(`https://my-json-server.typicode.com/Sansrona/todo-list/tasks/${taskId}`,{text:taskText}).catch(()=>{\n                 alert('Can not edit task name');\n             });\n  }\n\n const onConfirmed = (listId, taskId, taskStatus) =>{\n   const newList = lists.map(list=>{\n     if(list.id === listId){\n      list.tasks = list.tasks.map(task=>{\n        if(task.id === taskId){\n          task.completed = taskStatus\n        }\n        return task;\n      })\n    }\n    return list;\n   })\n   setLists(newList);\n   axios.patch(`https://my-json-server.typicode.com/Sansrona/todo-list/tasks/${taskId}`, {completed: taskStatus}).catch(()=>{\n     alert('Can not edit task status');\n   });\n\n }\n\n\n\n  return (\n    <div className=\"todo\">\n      <div className=\"todo__sidebar\">\n        <List items={[\n          {\n            icon: <svg width=\"14\" height=\"12\" viewBox=\"0 0 14 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M10.96 5.10001H5.74001C5.24321 5.10001 5.20001 5.50231 5.20001 6.00001C5.20001 6.49771 5.24321 6.90001 5.74001 6.90001H10.96C11.4568 6.90001 11.5 6.49771 11.5 6.00001C11.5 5.50231 11.4568 5.10001 10.96 5.10001ZM12.76 9.60001H5.74001C5.24321 9.60001 5.20001 10.0023 5.20001 10.5C5.20001 10.9977 5.24321 11.4 5.74001 11.4H12.76C13.2568 11.4 13.3 10.9977 13.3 10.5C13.3 10.0023 13.2568 9.60001 12.76 9.60001ZM5.74001 2.40001H12.76C13.2568 2.40001 13.3 1.99771 13.3 1.50001C13.3 1.00231 13.2568 0.600006 12.76 0.600006H5.74001C5.24321 0.600006 5.20001 1.00231 5.20001 1.50001C5.20001 1.99771 5.24321 2.40001 5.74001 2.40001ZM2.86001 5.10001H1.24001C0.743212 5.10001 0.700012 5.50231 0.700012 6.00001C0.700012 6.49771 0.743212 6.90001 1.24001 6.90001H2.86001C3.35681 6.90001 3.40001 6.49771 3.40001 6.00001C3.40001 5.50231 3.35681 5.10001 2.86001 5.10001ZM2.86001 9.60001H1.24001C0.743212 9.60001 0.700012 10.0023 0.700012 10.5C0.700012 10.9977 0.743212 11.4 1.24001 11.4H2.86001C3.35681 11.4 3.40001 10.9977 3.40001 10.5C3.40001 10.0023 3.35681 9.60001 2.86001 9.60001ZM2.86001 0.600006H1.24001C0.743212 0.600006 0.700012 1.00231 0.700012 1.50001C0.700012 1.99771 0.743212 2.40001 1.24001 2.40001H2.86001C3.35681 2.40001 3.40001 1.99771 3.40001 1.50001C3.40001 1.00231 3.35681 0.600006 2.86001 0.600006Z\" fill=\"#7C7C7C\" />\n            </svg>,\n            name: 'All tasks',\n            active: history.location.pathname === '/'\n          }\n        ]}\n\n          onClickItem={() => {\n            history.push(`/`)\n          }}\n\n        />\n        {lists ? (\n          <List\n            items={lists} onRemove={id => {\n              const newLists = lists.filter(item => item.id !== id)\n              setLists(newLists);\n            }}\n            onClickItem={item => {\n              history.push(`/lists/${item.id}`)\n            }}\n            activeItem={activeItem}\n            isRemovable\n\n          />) : ('Loading...')}\n        <AddButtonList onAdd={onAddList} colors={colors} />\n      </div>\n      <div className=\"todo__tasks\">\n        <Route exact path='/'>\n          {lists && lists.map(list =>\n          (<Tasks key={list.id} list={list} onConfirmed={onConfirmed} onRemoveTask={onRemoveTask} addNewTask={addNewTask} onEditTitle={onEditListTitle} withoutEmpty />\n          ))}\n        </Route>\n        <Route path='/lists/:id'>\n          {lists && activeItem && <Tasks list={activeItem} onConfirmed={onConfirmed} onEditTask={onEditTask} onRemoveTask={onRemoveTask} addNewTask={addNewTask} onEditTitle={onEditListTitle} />\n          }\n        </Route>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\n\n\nimport './index.scss';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}